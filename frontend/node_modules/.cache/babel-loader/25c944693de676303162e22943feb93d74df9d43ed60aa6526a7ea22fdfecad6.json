{"ast":null,"code":"var _jsxFileName = \"/Users/kwadwoantwi/CascadeProjects/online-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardActions, Grid, Alert, Snackbar, Container, Paper, Avatar, Stack } from '@mui/material';\nimport DashboardLayout from './DashboardLayout';\nimport CandidatePhotoInput from './CandidatePhotoInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = 'http://localhost:5001';\nfunction App() {\n  _s();\n  const [view, setView] = useState('login');\n  const [changePw, setChangePw] = useState({\n    current: '',\n    new: '',\n    confirm: ''\n  });\n  const [pwMsg, setPwMsg] = useState('');\n  const [smtp, setSmtp] = useState({\n    smtp_host: '',\n    smtp_port: '',\n    smtp_user: '',\n    smtp_password: '',\n    smtp_from: '',\n    smtp_tls: true\n  });\n  const [smtpMsg, setSmtpMsg] = useState('');\n  const [smtpLoading, setSmtpLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [role, setRole] = useState(null); // 'admin' or 'user'\n  const [elections, setElections] = useState([]);\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [voteMsg, setVoteMsg] = useState('');\n  const [results, setResults] = useState(null);\n  const [newElection, setNewElection] = useState({\n    title: '',\n    candidates: []\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (view === 'dashboard') {\n      axios.get(`${api}/elections`).then(res => setElections(res.data));\n    }\n  }, [view]);\n  const handleRegister = () => {\n    axios.post(`${api}/register`, {\n      username,\n      password\n    }).then(() => {\n      setError('');\n      setView('login');\n    }).catch(e => {\n      if (e.response && e.response.data && e.response.data.message) {\n        setError('Registration failed: ' + e.response.data.message);\n      } else {\n        setError('Registration failed: ' + (e.message || 'Unknown error'));\n      }\n    });\n  };\n  const handleLogin = () => {\n    axios.post(`${api}/login`, {\n      username,\n      password\n    }).then(res => {\n      setUserId(res.data.user_id);\n      setRole(res.data.role);\n      setView('dashboard');\n    }).catch(e => {\n      var _e$response, _e$response$data;\n      return setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'Login failed');\n    });\n  };\n  const handleCreateElection = async () => {\n    setError('');\n    // Only send candidates with a name, and remove _file property\n    const validCandidates = newElection.candidates.filter(c => c.name && c.name.trim()).map(c => {\n      const {\n        _file,\n        ...rest\n      } = c;\n      return rest;\n    });\n    if (!newElection.title || validCandidates.length === 0) {\n      setError('Election title and at least one candidate with a name are required.');\n      return;\n    }\n    try {\n      await axios.post(`${api}/elections`, {\n        title: newElection.title,\n        candidates: validCandidates,\n        username\n      });\n      setView('dashboard');\n      setNewElection({\n        title: '',\n        candidates: []\n      });\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) || 'Could not create election');\n    }\n  };\n  const handleVote = (electionId, candidateId) => {\n    axios.post(`${api}/vote`, {\n      user_id: userId,\n      election_id: electionId,\n      candidate_id: candidateId\n    }).then(() => setVoteMsg('Vote cast!')).catch(e => {\n      var _e$response3, _e$response3$data;\n      return setVoteMsg(((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Voting failed');\n    });\n  };\n\n  // Navigation handler for DashboardLayout\n  const handleNav = target => {\n    if (target === 'logout') {\n      setUserId(null);\n      setUsername('');\n      setPassword('');\n      setRole(null);\n      setView('login');\n      setError('');\n      setPwMsg('');\n      setChangePw({\n        current: '',\n        new: '',\n        confirm: ''\n      });\n      setSmtpMsg('');\n      setSmtp({\n        smtp_host: '',\n        smtp_port: '',\n        smtp_user: '',\n        smtp_password: '',\n        smtp_from: '',\n        smtp_tls: true\n      });\n    } else {\n      setView(target);\n      setPwMsg('');\n      setChangePw({\n        current: '',\n        new: '',\n        confirm: ''\n      });\n      setSmtpMsg('');\n      if (target === 'settings' && role === 'admin') {\n        fetchSmtpSettings();\n      }\n    }\n  };\n  const fetchSmtpSettings = async () => {\n    setSmtpLoading(true);\n    setSmtpMsg('');\n    try {\n      const res = await axios.get(`${api}/settings`, {\n        params: {\n          username\n        }\n      });\n      setSmtp({\n        smtp_host: res.data.smtp_host || '',\n        smtp_port: res.data.smtp_port || '',\n        smtp_user: res.data.smtp_user || '',\n        smtp_password: res.data.smtp_password || '',\n        smtp_from: res.data.smtp_from || '',\n        smtp_tls: res.data.smtp_tls !== undefined ? res.data.smtp_tls : true\n      });\n    } catch (e) {\n      setSmtpMsg('Failed to load SMTP settings');\n    }\n    setSmtpLoading(false);\n  };\n\n  // Login/Register forms (full page, centered)\n  if (view === 'login' || view === 'register') {\n    const isLogin = view === 'login';\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      sx: {\n        minHeight: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          width: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: isLogin ? handleLogin : handleRegister,\n            fullWidth: true,\n            children: isLogin ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setView(isLogin ? 'register' : 'login'),\n            fullWidth: true,\n            children: isLogin ? 'Register' : 'Back to Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results handler for admin\n  const handleViewResults = electionId => {\n    axios.get(`${api}/results/${electionId}?username=${username}`).then(res => setResults(res.data)).catch(() => setResults(null));\n  };\n\n  // Dashboard & Create Election inside DashboardLayout\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    selected: view,\n    onSelect: handleNav,\n    username: username,\n    role: role,\n    children: [view === 'dashboard' && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          color: '#1976d2',\n          fontWeight: 700\n        },\n        children: \"Available Elections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: elections.map(e => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 2,\n            sx: {\n              borderRadius: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                gutterBottom: true,\n                children: e.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontWeight: 500,\n                  color: '#555',\n                  mb: 1\n                },\n                children: \"Candidates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: e.candidates.map(c => /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    px: 2,\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2,\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: c.photo_url,\n                    alt: c.name,\n                    sx: {\n                      width: 32,\n                      height: 32\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: c.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    color: \"success\",\n                    onClick: () => handleVote(e.id, c.id),\n                    sx: {\n                      ml: 1\n                    },\n                    children: \"Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 27\n                  }, this)]\n                }, c.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: role === 'admin' && username === 'kantwi' && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                fullWidth: true,\n                onClick: () => handleViewResults(e.id),\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), voteMsg && /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: true,\n        autoHideDuration: 3000,\n        onClose: () => setVoteMsg(''),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: voteMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this), role === 'admin' && username === 'kantwi' && results && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 4,\n        sx: {\n          mt: 4,\n          p: 3,\n          borderRadius: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"ul\",\n          sx: {\n            listStyle: 'none',\n            pl: 0\n          },\n          children: Object.entries(results).map(([name, obj]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: obj.photo_url,\n                alt: name,\n                sx: {\n                  width: 28,\n                  height: 28\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontWeight: 600\n                },\n                children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#1976d2'\n                  },\n                  children: [obj.votes, \" votes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: () => setResults(null),\n          children: \"Close Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), view === 'changePassword' && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 8,\n        mb: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 5,\n        sx: {\n          borderRadius: 4,\n          p: {\n            xs: 2,\n            sm: 4\n          },\n          boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3,\n            fontWeight: 700,\n            color: '#1976d2',\n            letterSpacing: 1\n          },\n          align: \"center\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Current Password\",\n            type: \"password\",\n            value: changePw.current,\n            onChange: e => setChangePw({\n              ...changePw,\n              current: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Password\",\n            type: \"password\",\n            value: changePw.new,\n            onChange: e => setChangePw({\n              ...changePw,\n              new: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm New Password\",\n            type: \"password\",\n            value: changePw.confirm,\n            onChange: e => setChangePw({\n              ...changePw,\n              confirm: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 1,\n              fontWeight: 600,\n              borderRadius: 2,\n              boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)',\n              transition: '0.2s',\n              ':hover': {\n                background: '#115293'\n              }\n            },\n            onClick: async () => {\n              setPwMsg('');\n              if (!changePw.current || !changePw.new) {\n                setPwMsg('Please fill all fields.');\n                return;\n              }\n              if (changePw.new !== changePw.confirm) {\n                setPwMsg('New passwords do not match.');\n                return;\n              }\n              try {\n                await axios.post(`${api}/change_password`, {\n                  username,\n                  current_password: changePw.current,\n                  new_password: changePw.new\n                });\n                setPwMsg('Password changed successfully!');\n                setChangePw({\n                  current: '',\n                  new: '',\n                  confirm: ''\n                });\n              } catch (e) {\n                var _e$response4, _e$response4$data;\n                setPwMsg(((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message) || 'Failed to change password.');\n              }\n            },\n            fullWidth: true,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), pwMsg && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: pwMsg.includes('success') ? 'success' : 'error',\n            sx: {\n              mt: 2\n            },\n            children: pwMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), view === 'settings' && role === 'admin' && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 8,\n        mb: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 5,\n        sx: {\n          borderRadius: 4,\n          p: {\n            xs: 2,\n            sm: 4\n          },\n          boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3,\n            fontWeight: 700,\n            color: '#1976d2',\n            letterSpacing: 1\n          },\n          align: \"center\",\n          children: \"SMTP Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Host\",\n            value: smtp.smtp_host,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_host: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Port\",\n            type: \"number\",\n            value: smtp.smtp_port,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_port: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Username\",\n            value: smtp.smtp_user,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_user: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Password\",\n            type: \"password\",\n            value: smtp.smtp_password,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_password: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"From Email\",\n            value: smtp.smtp_from,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_from: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !!smtp.smtp_tls,\n              id: \"smtp_tls\",\n              onChange: e => setSmtp({\n                ...smtp,\n                smtp_tls: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"smtp_tls\",\n              style: {\n                fontWeight: 500\n              },\n              children: \"Use TLS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 1,\n              fontWeight: 600,\n              borderRadius: 2,\n              boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)',\n              transition: '0.2s',\n              ':hover': {\n                background: '#115293'\n              }\n            },\n            disabled: smtpLoading,\n            onClick: async () => {\n              setSmtpMsg('');\n              setSmtpLoading(true);\n              try {\n                await axios.post(`${api}/settings`, {\n                  ...smtp,\n                  username\n                });\n                setSmtpMsg('Settings updated successfully!');\n              } catch (e) {\n                var _e$response5, _e$response5$data;\n                setSmtpMsg(((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : (_e$response5$data = _e$response5.data) === null || _e$response5$data === void 0 ? void 0 : _e$response5$data.message) || 'Failed to update SMTP settings.');\n              }\n              setSmtpLoading(false);\n            },\n            fullWidth: true,\n            children: \"Save Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), smtpMsg && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: smtpMsg.includes('success') ? 'success' : 'error',\n            sx: {\n              mt: 2\n            },\n            children: smtpMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), view === 'createElection' && role === 'admin' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 480\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: \"Create Election\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Election Title\",\n          value: newElection.title,\n          onChange: e => setNewElection({\n            ...newElection,\n            title: e.target.value\n          }),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            mt: 2\n          },\n          children: \"Candidates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), newElection.candidates.map((c, idx) => /*#__PURE__*/_jsxDEV(CandidatePhotoInput, {\n          value: c,\n          onChange: val => {\n            const arr = [...newElection.candidates];\n            arr[idx] = val;\n            setNewElection({\n              ...newElection,\n              candidates: arr\n            });\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setNewElection({\n            ...newElection,\n            candidates: [...newElection.candidates, {\n              name: '',\n              photo_url: ''\n            }]\n          }),\n          children: \"Add Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateElection,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setView('dashboard'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oMBa0R2TF9s6HTm4TcPPg+3pl2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Button","TextField","Typography","Card","CardContent","CardActions","Grid","Alert","Snackbar","Container","Paper","Avatar","Stack","DashboardLayout","CandidatePhotoInput","jsxDEV","_jsxDEV","api","App","_s","view","setView","changePw","setChangePw","current","new","confirm","pwMsg","setPwMsg","smtp","setSmtp","smtp_host","smtp_port","smtp_user","smtp_password","smtp_from","smtp_tls","smtpMsg","setSmtpMsg","smtpLoading","setSmtpLoading","username","setUsername","password","setPassword","userId","setUserId","role","setRole","elections","setElections","selectedElection","setSelectedElection","voteMsg","setVoteMsg","results","setResults","newElection","setNewElection","title","candidates","error","setError","get","then","res","data","handleRegister","post","catch","e","response","message","handleLogin","user_id","_e$response","_e$response$data","handleCreateElection","validCandidates","filter","c","name","trim","map","_file","rest","length","_e$response2","_e$response2$data","handleVote","electionId","candidateId","election_id","candidate_id","_e$response3","_e$response3$data","handleNav","target","fetchSmtpSettings","params","undefined","isLogin","maxWidth","sx","minHeight","display","alignItems","justifyContent","children","elevation","p","width","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","label","value","onChange","fullWidth","type","color","onClick","severity","handleViewResults","selected","onSelect","mb","fontWeight","container","spacing","item","xs","sm","md","borderRadius","flexWrap","px","src","photo_url","alt","height","size","id","ml","open","autoHideDuration","onClose","mt","component","listStyle","pl","Object","entries","obj","direction","style","votes","boxShadow","letterSpacing","transition","background","current_password","new_password","_e$response4","_e$response4$data","includes","checked","htmlFor","disabled","_e$response5","_e$response5$data","idx","val","arr","_c","$RefreshReg$"],"sources":["/Users/kwadwoantwi/CascadeProjects/online-voting-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardActions, Grid, Alert, Snackbar, Container, Paper, Avatar, Stack } from '@mui/material';\nimport DashboardLayout from './DashboardLayout';\nimport CandidatePhotoInput from './CandidatePhotoInput';\n\nconst api = 'http://localhost:5001';\n\nfunction App() {\n  const [view, setView] = useState('login');\n  const [changePw, setChangePw] = useState({ current: '', new: '', confirm: '' });\n  const [pwMsg, setPwMsg] = useState('');\n  const [smtp, setSmtp] = useState({ smtp_host: '', smtp_port: '', smtp_user: '', smtp_password: '', smtp_from: '', smtp_tls: true });\n  const [smtpMsg, setSmtpMsg] = useState('');\n  const [smtpLoading, setSmtpLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [role, setRole] = useState(null); // 'admin' or 'user'\n  const [elections, setElections] = useState([]);\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [voteMsg, setVoteMsg] = useState('');\n  const [results, setResults] = useState(null);\n\n  const [newElection, setNewElection] = useState({ title: '', candidates: [] });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (view === 'dashboard') {\n      axios.get(`${api}/elections`).then(res => setElections(res.data));\n    }\n  }, [view]);\n\n  const handleRegister = () => {\n    axios.post(`${api}/register`, { username, password })\n      .then(() => { setError(''); setView('login'); })\n      .catch(e => {\n        if (e.response && e.response.data && e.response.data.message) {\n          setError('Registration failed: ' + e.response.data.message);\n        } else {\n          setError('Registration failed: ' + (e.message || 'Unknown error'));\n        }\n      });\n  };\n\n  const handleLogin = () => {\n    axios.post(`${api}/login`, { username, password })\n      .then(res => { setUserId(res.data.user_id); setRole(res.data.role); setView('dashboard'); })\n      .catch(e => setError(e.response?.data?.message || 'Login failed'));\n  };\n\n  const handleCreateElection = async () => {\n    setError('');\n    // Only send candidates with a name, and remove _file property\n    const validCandidates = newElection.candidates\n      .filter(c => c.name && c.name.trim())\n      .map(c => {\n        const { _file, ...rest } = c;\n        return rest;\n      });\n    if (!newElection.title || validCandidates.length === 0) {\n      setError('Election title and at least one candidate with a name are required.');\n      return;\n    }\n    try {\n      await axios.post(`${api}/elections`, { title: newElection.title, candidates: validCandidates, username });\n      setView('dashboard');\n      setNewElection({ title: '', candidates: [] });\n    } catch (e) {\n      setError(e.response?.data?.message || 'Could not create election');\n    }\n  };\n\n  const handleVote = (electionId, candidateId) => {\n    axios.post(`${api}/vote`, { user_id: userId, election_id: electionId, candidate_id: candidateId })\n      .then(() => setVoteMsg('Vote cast!'))\n      .catch(e => setVoteMsg(e.response?.data?.message || 'Voting failed'));\n  };\n\n\n\n  // Navigation handler for DashboardLayout\n  const handleNav = (target) => {\n    if (target === 'logout') {\n      setUserId(null);\n      setUsername('');\n      setPassword('');\n      setRole(null);\n      setView('login');\n      setError('');\n      setPwMsg('');\n      setChangePw({ current: '', new: '', confirm: '' });\n      setSmtpMsg('');\n      setSmtp({ smtp_host: '', smtp_port: '', smtp_user: '', smtp_password: '', smtp_from: '', smtp_tls: true });\n    } else {\n      setView(target);\n      setPwMsg('');\n      setChangePw({ current: '', new: '', confirm: '' });\n      setSmtpMsg('');\n      if (target === 'settings' && role === 'admin') {\n        fetchSmtpSettings();\n      }\n    }\n  };\n\n  const fetchSmtpSettings = async () => {\n    setSmtpLoading(true);\n    setSmtpMsg('');\n    try {\n      const res = await axios.get(`${api}/settings`, { params: { username } });\n      setSmtp({\n        smtp_host: res.data.smtp_host || '',\n        smtp_port: res.data.smtp_port || '',\n        smtp_user: res.data.smtp_user || '',\n        smtp_password: res.data.smtp_password || '',\n        smtp_from: res.data.smtp_from || '',\n        smtp_tls: res.data.smtp_tls !== undefined ? res.data.smtp_tls : true\n      });\n    } catch (e) {\n      setSmtpMsg('Failed to load SMTP settings');\n    }\n    setSmtpLoading(false);\n  };\n\n  // Login/Register forms (full page, centered)\n  if (view === 'login' || view === 'register') {\n    const isLogin = view === 'login';\n    return (\n      <Container maxWidth=\"xs\" sx={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Paper elevation={3} sx={{ p: 4, width: 1 }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>\n            {isLogin ? 'Login' : 'Register'}\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} fullWidth />\n            <TextField label=\"Password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} fullWidth />\n            <Button variant=\"contained\" color=\"primary\" onClick={isLogin ? handleLogin : handleRegister} fullWidth>\n              {isLogin ? 'Login' : 'Register'}\n            </Button>\n            <Button onClick={() => setView(isLogin ? 'register' : 'login')} fullWidth>\n              {isLogin ? 'Register' : 'Back to Login'}\n            </Button>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n          </Box>\n        </Paper>\n      </Container>\n    );\n  }\n\n  // Results handler for admin\n  const handleViewResults = (electionId) => {\n    axios.get(`${api}/results/${electionId}?username=${username}`)\n      .then(res => setResults(res.data))\n      .catch(() => setResults(null));\n  };\n\n  // Dashboard & Create Election inside DashboardLayout\n  return (\n    <DashboardLayout selected={view} onSelect={handleNav} username={username} role={role}>\n      {view === 'dashboard' && (\n        <Box>\n          <Typography variant=\"h4\" sx={{ mb: 3, color: '#1976d2', fontWeight: 700 }}>Available Elections</Typography>\n          <Grid container spacing={3}>\n            {elections.map(e => (\n              <Grid item xs={12} sm={6} md={4} key={e.id}>\n                <Card elevation={2} sx={{ borderRadius: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" color=\"primary\" gutterBottom>{e.title}</Typography>\n                    <Typography sx={{ fontWeight: 500, color: '#555', mb: 1 }}>Candidates:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                      {e.candidates.map(c => (\n                        <Paper key={c.id} sx={{ p: 1, px: 2, borderRadius: 2, display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>\n                          <Avatar src={c.photo_url} alt={c.name} sx={{ width: 32, height: 32 }} />\n                          <Typography>{c.name}</Typography>\n                          <Button size=\"small\" variant=\"contained\" color=\"success\" onClick={() => handleVote(e.id, c.id)} sx={{ ml: 1 }}>\n                            Vote\n                          </Button>\n                        </Paper>\n                      ))}\n                    </Box>\n                  </CardContent>\n                  <CardActions>\n                    {role === 'admin' && username === 'kantwi' && (\n                      <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={() => handleViewResults(e.id)}>\n                        View Results\n                      </Button>\n                    )}\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          {voteMsg && <Snackbar open autoHideDuration={3000} onClose={() => setVoteMsg('')}><Alert severity=\"success\">{voteMsg}</Alert></Snackbar>}\n\n          {/* Results display for admin */}\n          {role === 'admin' && username === 'kantwi' && results && (\n            <Paper elevation={4} sx={{ mt: 4, p: 3, borderRadius: 3 }}>\n              <Typography variant=\"h6\" color=\"primary\" gutterBottom>Results</Typography>\n              <Box component=\"ul\" sx={{ listStyle: 'none', pl: 0 }}>\n                {Object.entries(results).map(([name, obj]) => (\n                  <li key={name}>\n                    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                      <Avatar src={obj.photo_url} alt={name} sx={{ width: 28, height: 28 }} />\n                      <Typography sx={{ fontWeight: 600 }}>{name}: <span style={{ color: '#1976d2' }}>{obj.votes} votes</span></Typography>\n                    </Stack>\n                  </li>\n                ))}\n              </Box>\n              <Button variant=\"contained\" sx={{ mt: 2 }} onClick={() => setResults(null)}>Close Results</Button>\n            </Paper>\n          )}\n\n        </Box>\n      )}\n      {view === 'changePassword' && (\n        <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 8 }}>\n          <Card elevation={5} sx={{ borderRadius: 4, p: { xs: 2, sm: 4 }, boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)' }}>\n            <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 700, color: '#1976d2', letterSpacing: 1 }} align=\"center\">\n              Change Password\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <TextField\n                label=\"Current Password\"\n                type=\"password\"\n                value={changePw.current}\n                onChange={e => setChangePw({ ...changePw, current: e.target.value })}\n                fullWidth\n              />\n              <TextField\n                label=\"New Password\"\n                type=\"password\"\n                value={changePw.new}\n                onChange={e => setChangePw({ ...changePw, new: e.target.value })}\n                fullWidth\n              />\n              <TextField\n                label=\"Confirm New Password\"\n                type=\"password\"\n                value={changePw.confirm}\n                onChange={e => setChangePw({ ...changePw, confirm: e.target.value })}\n                fullWidth\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 1, fontWeight: 600, borderRadius: 2, boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)', transition: '0.2s', ':hover': { background: '#115293' } }}\n                onClick={async () => {\n                  setPwMsg('');\n                  if (!changePw.current || !changePw.new) {\n                    setPwMsg('Please fill all fields.');\n                    return;\n                  }\n                  if (changePw.new !== changePw.confirm) {\n                    setPwMsg('New passwords do not match.');\n                    return;\n                  }\n                  try {\n                    await axios.post(`${api}/change_password`, {\n                      username,\n                      current_password: changePw.current,\n                      new_password: changePw.new\n                    });\n                    setPwMsg('Password changed successfully!');\n                    setChangePw({ current: '', new: '', confirm: '' });\n                  } catch (e) {\n                    setPwMsg(\n                      e.response?.data?.message || 'Failed to change password.'\n                    );\n                  }\n                }}\n                fullWidth\n              >\n                Change Password\n              </Button>\n              {pwMsg && <Alert severity={pwMsg.includes('success') ? 'success' : 'error'} sx={{ mt: 2 }}>{pwMsg}</Alert>}\n            </Box>\n          </Card>\n        </Container>\n      )}\n      {view === 'settings' && role === 'admin' && (\n        <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 8 }}>\n          <Card elevation={5} sx={{ borderRadius: 4, p: { xs: 2, sm: 4 }, boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)' }}>\n            <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 700, color: '#1976d2', letterSpacing: 1 }} align=\"center\">\n              SMTP Settings\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <TextField label=\"SMTP Host\" value={smtp.smtp_host} onChange={e => setSmtp({ ...smtp, smtp_host: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Port\" type=\"number\" value={smtp.smtp_port} onChange={e => setSmtp({ ...smtp, smtp_port: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Username\" value={smtp.smtp_user} onChange={e => setSmtp({ ...smtp, smtp_user: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Password\" type=\"password\" value={smtp.smtp_password} onChange={e => setSmtp({ ...smtp, smtp_password: e.target.value })} fullWidth />\n              <TextField label=\"From Email\" value={smtp.smtp_from} onChange={e => setSmtp({ ...smtp, smtp_from: e.target.value })} fullWidth />\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <input type=\"checkbox\" checked={!!smtp.smtp_tls} id=\"smtp_tls\" onChange={e => setSmtp({ ...smtp, smtp_tls: e.target.checked })} />\n                <label htmlFor=\"smtp_tls\" style={{ fontWeight: 500 }}>Use TLS</label>\n              </Box>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 1, fontWeight: 600, borderRadius: 2, boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)', transition: '0.2s', ':hover': { background: '#115293' } }}\n                disabled={smtpLoading}\n                onClick={async () => {\n                  setSmtpMsg('');\n                  setSmtpLoading(true);\n                  try {\n                    await axios.post(`${api}/settings`, { ...smtp, username });\n                    setSmtpMsg('Settings updated successfully!');\n                  } catch (e) {\n                    setSmtpMsg(e.response?.data?.message || 'Failed to update SMTP settings.');\n                  }\n                  setSmtpLoading(false);\n                }}\n                fullWidth\n              >\n                Save Settings\n              </Button>\n              {smtpMsg && <Alert severity={smtpMsg.includes('success') ? 'success' : 'error'} sx={{ mt: 2 }}>{smtpMsg}</Alert>}\n            </Box>\n          </Card>\n        </Container>\n      )}\n      {view === 'createElection' && role === 'admin' && (\n        <Box sx={{ maxWidth: 480 }}>\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>Create Election</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField label=\"Election Title\" value={newElection.title} onChange={e => setNewElection({ ...newElection, title: e.target.value })} fullWidth />\n            <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Candidates</Typography>\n            {newElection.candidates.map((c, idx) => (\n              <CandidatePhotoInput\n                key={idx}\n                value={c}\n                onChange={val => {\n                  const arr = [...newElection.candidates];\n                  arr[idx] = val;\n                  setNewElection({ ...newElection, candidates: arr });\n                }}\n              />\n            ))}\n            <Button variant=\"outlined\" onClick={() => setNewElection({ ...newElection, candidates: [...newElection.candidates, { name: '', photo_url: '' }] })}>\n              Add Candidate\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleCreateElection}>\n              Create\n            </Button>\n            <Button onClick={() => setView('dashboard')}>Cancel</Button>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n          </Box>\n        </Box>\n      )}\n    </DashboardLayout>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}