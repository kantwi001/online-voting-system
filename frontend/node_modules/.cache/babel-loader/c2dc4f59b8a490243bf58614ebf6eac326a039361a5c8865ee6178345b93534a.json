{"ast":null,"code":"var _jsxFileName = \"/Users/kwadwoantwi/CascadeProjects/online-voting-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardActions, Grid, Alert, Snackbar, Container, Paper, Avatar, Stack, Dialog, DialogTitle, DialogContent, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DashboardLayout from './DashboardLayout';\nimport CandidatePhotoInput from './CandidatePhotoInput';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = 'http://localhost:5001';\nfunction App() {\n  _s();\n  const [view, setView] = useState('login');\n  const [changePw, setChangePw] = useState({\n    current: '',\n    new: '',\n    confirm: ''\n  });\n  const [pwMsg, setPwMsg] = useState('');\n  const [smtp, setSmtp] = useState({\n    smtp_host: '',\n    smtp_port: '',\n    smtp_user: '',\n    smtp_password: '',\n    smtp_from: '',\n    smtp_tls: true\n  });\n  const [smtpMsg, setSmtpMsg] = useState('');\n  const [smtpLoading, setSmtpLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [role, setRole] = useState(null); // 'admin' or 'user'\n  const [elections, setElections] = useState([]);\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [voteMsg, setVoteMsg] = useState('');\n  const [results, setResults] = useState(null);\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [resultsElectionTitle, setResultsElectionTitle] = useState('');\n  const [newElection, setNewElection] = useState({\n    title: '',\n    candidates: []\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (view === 'dashboard') {\n      axios.get(`${api}/elections`).then(res => setElections(res.data));\n    }\n  }, [view]);\n  const handleRegister = () => {\n    axios.post(`${api}/register`, {\n      username,\n      password\n    }).then(() => {\n      setError('');\n      setView('login');\n    }).catch(e => {\n      if (e.response && e.response.data && e.response.data.message) {\n        setError('Registration failed: ' + e.response.data.message);\n      } else {\n        setError('Registration failed: ' + (e.message || 'Unknown error'));\n      }\n    });\n  };\n  const handleLogin = () => {\n    axios.post(`${api}/login`, {\n      username,\n      password\n    }).then(res => {\n      setUserId(res.data.user_id);\n      setRole(res.data.role);\n      setView('dashboard');\n    }).catch(e => {\n      var _e$response, _e$response$data;\n      return setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'Login failed');\n    });\n  };\n  const handleCreateElection = async () => {\n    setError('');\n    // Only send candidates with a name, and remove _file property\n    const validCandidates = newElection.candidates.filter(c => c.name && c.name.trim()).map(c => {\n      const {\n        _file,\n        ...rest\n      } = c;\n      return rest;\n    });\n    if (!newElection.title || validCandidates.length === 0) {\n      setError('Election title and at least one candidate with a name are required.');\n      return;\n    }\n    try {\n      await axios.post(`${api}/elections`, {\n        title: newElection.title,\n        candidates: validCandidates,\n        username\n      });\n      setView('dashboard');\n      setNewElection({\n        title: '',\n        candidates: []\n      });\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) || 'Could not create election');\n    }\n  };\n  const handleVote = (electionId, candidateId) => {\n    axios.post(`${api}/vote`, {\n      user_id: userId,\n      election_id: electionId,\n      candidate_id: candidateId\n    }).then(() => setVoteMsg('Vote cast!')).catch(e => {\n      var _e$response3, _e$response3$data;\n      return setVoteMsg(((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Voting failed');\n    });\n  };\n\n  // Navigation handler for DashboardLayout\n  const handleNav = target => {\n    if (target === 'logout') {\n      setUserId(null);\n      setUsername('');\n      setPassword('');\n      setRole(null);\n      setView('login');\n      setError('');\n      setPwMsg('');\n      setChangePw({\n        current: '',\n        new: '',\n        confirm: ''\n      });\n      setSmtpMsg('');\n      setSmtp({\n        smtp_host: '',\n        smtp_port: '',\n        smtp_user: '',\n        smtp_password: '',\n        smtp_from: '',\n        smtp_tls: true\n      });\n    } else {\n      setView(target);\n      setPwMsg('');\n      setChangePw({\n        current: '',\n        new: '',\n        confirm: ''\n      });\n      setSmtpMsg('');\n      if (target === 'settings' && role === 'admin') {\n        fetchSmtpSettings();\n      }\n    }\n  };\n  const fetchSmtpSettings = async () => {\n    setSmtpLoading(true);\n    setSmtpMsg('');\n    try {\n      const res = await axios.get(`${api}/settings`, {\n        params: {\n          username\n        }\n      });\n      setSmtp({\n        smtp_host: res.data.smtp_host || '',\n        smtp_port: res.data.smtp_port || '',\n        smtp_user: res.data.smtp_user || '',\n        smtp_password: res.data.smtp_password || '',\n        smtp_from: res.data.smtp_from || '',\n        smtp_tls: res.data.smtp_tls !== undefined ? res.data.smtp_tls : true\n      });\n    } catch (e) {\n      setSmtpMsg('Failed to load SMTP settings');\n    }\n    setSmtpLoading(false);\n  };\n\n  // Login/Register forms (full page, centered)\n  if (view === 'login' || view === 'register') {\n    const isLogin = view === 'login';\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      sx: {\n        minHeight: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          width: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: isLogin ? handleLogin : handleRegister,\n            fullWidth: true,\n            children: isLogin ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setView(isLogin ? 'register' : 'login'),\n            fullWidth: true,\n            children: isLogin ? 'Register' : 'Back to Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results handler for admin\n  const handleViewResults = (electionId, electionTitle) => {\n    axios.get(`${api}/results/${electionId}?username=${username}`).then(res => {\n      setResults(res.data);\n      setResultsOpen(true);\n      setResultsElectionTitle(electionTitle);\n    }).catch(() => {\n      setResults(null);\n      setResultsOpen(false);\n    });\n  };\n\n  // Dashboard & Create Election inside DashboardLayout\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    selected: view,\n    onSelect: handleNav,\n    username: username,\n    role: role,\n    children: [view === 'dashboard' && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          color: '#1976d2',\n          fontWeight: 700\n        },\n        children: \"Available Elections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: elections.map(e => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 2,\n            sx: {\n              borderRadius: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                gutterBottom: true,\n                children: e.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontWeight: 500,\n                  color: '#555',\n                  mb: 1\n                },\n                children: \"Candidates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: e.candidates.map(c => /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    px: 2,\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2,\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: c.photo_url,\n                    alt: c.name,\n                    sx: {\n                      width: 32,\n                      height: 32\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: c.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    color: \"success\",\n                    onClick: () => handleVote(e.id, c.id),\n                    sx: {\n                      ml: 1\n                    },\n                    children: \"Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 27\n                  }, this)]\n                }, c.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: role === 'admin' && username === 'kantwi' && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                fullWidth: true,\n                onClick: () => handleViewResults(e.id, e.title),\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), voteMsg && /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: true,\n        autoHideDuration: 3000,\n        onClose: () => setVoteMsg(''),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: voteMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: resultsOpen,\n        onClose: () => setResultsOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            pr: 1\n          },\n          children: [\"Results for \", resultsElectionTitle, /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setResultsOpen(false),\n            size: \"large\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: results && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: Object.entries(results).map(([name, obj]) => ({\n                  name,\n                  votes: obj.votes,\n                  photo_url: obj.photo_url\n                })),\n                layout: \"vertical\",\n                margin: {\n                  left: 30,\n                  right: 30,\n                  top: 20,\n                  bottom: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  type: \"number\",\n                  allowDecimals: false,\n                  tick: {\n                    fontWeight: 700\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  dataKey: \"name\",\n                  type: \"category\",\n                  width: 120,\n                  tick: {\n                    fontWeight: 700\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  formatter: value => [`${value} votes`, 'Votes']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"votes\",\n                  fill: \"#1976d2\",\n                  children: Object.entries(results).map(([name, obj], idx) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: ['#1976d2', '#43a047', '#fbc02d', '#e53935', '#8e24aa'][idx % 5]\n                  }, name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3\n              },\n              children: Object.entries(results).map(([name, obj]) => /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 2,\n                alignItems: \"center\",\n                sx: {\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: obj.photo_url,\n                  alt: name,\n                  sx: {\n                    width: 32,\n                    height: 32,\n                    border: '2px solid #1976d2'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    fontWeight: 600,\n                    minWidth: 120\n                  },\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: '#1976d2',\n                    fontWeight: 700\n                  },\n                  children: [obj.votes, \" votes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), view === 'changePassword' && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 8,\n        mb: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 5,\n        sx: {\n          borderRadius: 4,\n          p: {\n            xs: 2,\n            sm: 4\n          },\n          boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3,\n            fontWeight: 700,\n            color: '#1976d2',\n            letterSpacing: 1\n          },\n          align: \"center\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Current Password\",\n            type: \"password\",\n            value: changePw.current,\n            onChange: e => setChangePw({\n              ...changePw,\n              current: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Password\",\n            type: \"password\",\n            value: changePw.new,\n            onChange: e => setChangePw({\n              ...changePw,\n              new: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm New Password\",\n            type: \"password\",\n            value: changePw.confirm,\n            onChange: e => setChangePw({\n              ...changePw,\n              confirm: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 1,\n              fontWeight: 600,\n              borderRadius: 2,\n              boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)',\n              transition: '0.2s',\n              ':hover': {\n                background: '#115293'\n              }\n            },\n            onClick: async () => {\n              setPwMsg('');\n              if (!changePw.current || !changePw.new) {\n                setPwMsg('Please fill all fields.');\n                return;\n              }\n              if (changePw.new !== changePw.confirm) {\n                setPwMsg('New passwords do not match.');\n                return;\n              }\n              try {\n                await axios.post(`${api}/change_password`, {\n                  username,\n                  current_password: changePw.current,\n                  new_password: changePw.new\n                });\n                setPwMsg('Password changed successfully!');\n                setChangePw({\n                  current: '',\n                  new: '',\n                  confirm: ''\n                });\n              } catch (e) {\n                var _e$response4, _e$response4$data;\n                setPwMsg(((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message) || 'Failed to change password.');\n              }\n            },\n            fullWidth: true,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), pwMsg && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: pwMsg.includes('success') ? 'success' : 'error',\n            sx: {\n              mt: 2\n            },\n            children: pwMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), view === 'settings' && role === 'admin' && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 8,\n        mb: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 5,\n        sx: {\n          borderRadius: 4,\n          p: {\n            xs: 2,\n            sm: 4\n          },\n          boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3,\n            fontWeight: 700,\n            color: '#1976d2',\n            letterSpacing: 1\n          },\n          align: \"center\",\n          children: \"SMTP Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Host\",\n            value: smtp.smtp_host,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_host: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Port\",\n            type: \"number\",\n            value: smtp.smtp_port,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_port: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Username\",\n            value: smtp.smtp_user,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_user: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SMTP Password\",\n            type: \"password\",\n            value: smtp.smtp_password,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_password: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"From Email\",\n            value: smtp.smtp_from,\n            onChange: e => setSmtp({\n              ...smtp,\n              smtp_from: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !!smtp.smtp_tls,\n              id: \"smtp_tls\",\n              onChange: e => setSmtp({\n                ...smtp,\n                smtp_tls: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"smtp_tls\",\n              style: {\n                fontWeight: 500\n              },\n              children: \"Use TLS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 1,\n              fontWeight: 600,\n              borderRadius: 2,\n              boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)',\n              transition: '0.2s',\n              ':hover': {\n                background: '#115293'\n              }\n            },\n            disabled: smtpLoading,\n            onClick: async () => {\n              setSmtpMsg('');\n              setSmtpLoading(true);\n              try {\n                await axios.post(`${api}/settings`, {\n                  ...smtp,\n                  username\n                });\n                setSmtpMsg('Settings updated successfully!');\n              } catch (e) {\n                var _e$response5, _e$response5$data;\n                setSmtpMsg(((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : (_e$response5$data = _e$response5.data) === null || _e$response5$data === void 0 ? void 0 : _e$response5$data.message) || 'Failed to update SMTP settings.');\n              }\n              setSmtpLoading(false);\n            },\n            fullWidth: true,\n            children: \"Save Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), smtpMsg && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: smtpMsg.includes('success') ? 'success' : 'error',\n            sx: {\n              mt: 2\n            },\n            children: smtpMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this), view === 'createElection' && role === 'admin' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 480\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: \"Create Election\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Election Title\",\n          value: newElection.title,\n          onChange: e => setNewElection({\n            ...newElection,\n            title: e.target.value\n          }),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            mt: 2\n          },\n          children: \"Candidates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), newElection.candidates.map((c, idx) => /*#__PURE__*/_jsxDEV(CandidatePhotoInput, {\n          value: c,\n          onChange: val => {\n            const arr = [...newElection.candidates];\n            arr[idx] = val;\n            setNewElection({\n              ...newElection,\n              candidates: arr\n            });\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setNewElection({\n            ...newElection,\n            candidates: [...newElection.candidates, {\n              name: '',\n              photo_url: ''\n            }]\n          }),\n          children: \"Add Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateElection,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setView('dashboard'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kzpwo+jPlOslRTBCN02/D9uTLNM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Button","TextField","Typography","Card","CardContent","CardActions","Grid","Alert","Snackbar","Container","Paper","Avatar","Stack","Dialog","DialogTitle","DialogContent","IconButton","CloseIcon","DashboardLayout","CandidatePhotoInput","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","Cell","jsxDEV","_jsxDEV","api","App","_s","view","setView","changePw","setChangePw","current","new","confirm","pwMsg","setPwMsg","smtp","setSmtp","smtp_host","smtp_port","smtp_user","smtp_password","smtp_from","smtp_tls","smtpMsg","setSmtpMsg","smtpLoading","setSmtpLoading","username","setUsername","password","setPassword","userId","setUserId","role","setRole","elections","setElections","selectedElection","setSelectedElection","voteMsg","setVoteMsg","results","setResults","resultsOpen","setResultsOpen","resultsElectionTitle","setResultsElectionTitle","newElection","setNewElection","title","candidates","error","setError","get","then","res","data","handleRegister","post","catch","e","response","message","handleLogin","user_id","_e$response","_e$response$data","handleCreateElection","validCandidates","filter","c","name","trim","map","_file","rest","length","_e$response2","_e$response2$data","handleVote","electionId","candidateId","election_id","candidate_id","_e$response3","_e$response3$data","handleNav","target","fetchSmtpSettings","params","undefined","isLogin","maxWidth","sx","minHeight","display","alignItems","justifyContent","children","elevation","p","width","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","label","value","onChange","fullWidth","type","color","onClick","severity","handleViewResults","electionTitle","selected","onSelect","mb","fontWeight","container","spacing","item","xs","sm","md","borderRadius","flexWrap","px","src","photo_url","alt","height","size","id","ml","open","autoHideDuration","onClose","pr","Object","entries","obj","votes","layout","margin","left","right","top","bottom","allowDecimals","tick","dataKey","formatter","fill","idx","mt","direction","border","minWidth","boxShadow","letterSpacing","transition","background","current_password","new_password","_e$response4","_e$response4$data","includes","checked","htmlFor","style","disabled","_e$response5","_e$response5$data","val","arr","_c","$RefreshReg$"],"sources":["/Users/kwadwoantwi/CascadeProjects/online-voting-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardActions, Grid, Alert, Snackbar, Container, Paper, Avatar, Stack, Dialog, DialogTitle, DialogContent, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DashboardLayout from './DashboardLayout';\nimport CandidatePhotoInput from './CandidatePhotoInput';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts';\n\nconst api = 'http://localhost:5001';\n\nfunction App() {\n  const [view, setView] = useState('login');\n  const [changePw, setChangePw] = useState({ current: '', new: '', confirm: '' });\n  const [pwMsg, setPwMsg] = useState('');\n  const [smtp, setSmtp] = useState({ smtp_host: '', smtp_port: '', smtp_user: '', smtp_password: '', smtp_from: '', smtp_tls: true });\n  const [smtpMsg, setSmtpMsg] = useState('');\n  const [smtpLoading, setSmtpLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [role, setRole] = useState(null); // 'admin' or 'user'\n  const [elections, setElections] = useState([]);\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [voteMsg, setVoteMsg] = useState('');\n  const [results, setResults] = useState(null);\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [resultsElectionTitle, setResultsElectionTitle] = useState('');\n\n  const [newElection, setNewElection] = useState({ title: '', candidates: [] });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (view === 'dashboard') {\n      axios.get(`${api}/elections`).then(res => setElections(res.data));\n    }\n  }, [view]);\n\n  const handleRegister = () => {\n    axios.post(`${api}/register`, { username, password })\n      .then(() => { setError(''); setView('login'); })\n      .catch(e => {\n        if (e.response && e.response.data && e.response.data.message) {\n          setError('Registration failed: ' + e.response.data.message);\n        } else {\n          setError('Registration failed: ' + (e.message || 'Unknown error'));\n        }\n      });\n  };\n\n  const handleLogin = () => {\n    axios.post(`${api}/login`, { username, password })\n      .then(res => { setUserId(res.data.user_id); setRole(res.data.role); setView('dashboard'); })\n      .catch(e => setError(e.response?.data?.message || 'Login failed'));\n  };\n\n  const handleCreateElection = async () => {\n    setError('');\n    // Only send candidates with a name, and remove _file property\n    const validCandidates = newElection.candidates\n      .filter(c => c.name && c.name.trim())\n      .map(c => {\n        const { _file, ...rest } = c;\n        return rest;\n      });\n    if (!newElection.title || validCandidates.length === 0) {\n      setError('Election title and at least one candidate with a name are required.');\n      return;\n    }\n    try {\n      await axios.post(`${api}/elections`, { title: newElection.title, candidates: validCandidates, username });\n      setView('dashboard');\n      setNewElection({ title: '', candidates: [] });\n    } catch (e) {\n      setError(e.response?.data?.message || 'Could not create election');\n    }\n  };\n\n  const handleVote = (electionId, candidateId) => {\n    axios.post(`${api}/vote`, { user_id: userId, election_id: electionId, candidate_id: candidateId })\n      .then(() => setVoteMsg('Vote cast!'))\n      .catch(e => setVoteMsg(e.response?.data?.message || 'Voting failed'));\n  };\n\n\n\n  // Navigation handler for DashboardLayout\n  const handleNav = (target) => {\n    if (target === 'logout') {\n      setUserId(null);\n      setUsername('');\n      setPassword('');\n      setRole(null);\n      setView('login');\n      setError('');\n      setPwMsg('');\n      setChangePw({ current: '', new: '', confirm: '' });\n      setSmtpMsg('');\n      setSmtp({ smtp_host: '', smtp_port: '', smtp_user: '', smtp_password: '', smtp_from: '', smtp_tls: true });\n    } else {\n      setView(target);\n      setPwMsg('');\n      setChangePw({ current: '', new: '', confirm: '' });\n      setSmtpMsg('');\n      if (target === 'settings' && role === 'admin') {\n        fetchSmtpSettings();\n      }\n    }\n  };\n\n  const fetchSmtpSettings = async () => {\n    setSmtpLoading(true);\n    setSmtpMsg('');\n    try {\n      const res = await axios.get(`${api}/settings`, { params: { username } });\n      setSmtp({\n        smtp_host: res.data.smtp_host || '',\n        smtp_port: res.data.smtp_port || '',\n        smtp_user: res.data.smtp_user || '',\n        smtp_password: res.data.smtp_password || '',\n        smtp_from: res.data.smtp_from || '',\n        smtp_tls: res.data.smtp_tls !== undefined ? res.data.smtp_tls : true\n      });\n    } catch (e) {\n      setSmtpMsg('Failed to load SMTP settings');\n    }\n    setSmtpLoading(false);\n  };\n\n  // Login/Register forms (full page, centered)\n  if (view === 'login' || view === 'register') {\n    const isLogin = view === 'login';\n    return (\n      <Container maxWidth=\"xs\" sx={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Paper elevation={3} sx={{ p: 4, width: 1 }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>\n            {isLogin ? 'Login' : 'Register'}\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} fullWidth />\n            <TextField label=\"Password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} fullWidth />\n            <Button variant=\"contained\" color=\"primary\" onClick={isLogin ? handleLogin : handleRegister} fullWidth>\n              {isLogin ? 'Login' : 'Register'}\n            </Button>\n            <Button onClick={() => setView(isLogin ? 'register' : 'login')} fullWidth>\n              {isLogin ? 'Register' : 'Back to Login'}\n            </Button>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n          </Box>\n        </Paper>\n      </Container>\n    );\n  }\n\n  // Results handler for admin\n  const handleViewResults = (electionId, electionTitle) => {\n    axios.get(`${api}/results/${electionId}?username=${username}`)\n      .then(res => {\n        setResults(res.data);\n        setResultsOpen(true);\n        setResultsElectionTitle(electionTitle);\n      })\n      .catch(() => {\n        setResults(null);\n        setResultsOpen(false);\n      });\n  };\n\n  // Dashboard & Create Election inside DashboardLayout\n  return (\n    <DashboardLayout selected={view} onSelect={handleNav} username={username} role={role}>\n      {view === 'dashboard' && (\n        <Box>\n          <Typography variant=\"h4\" sx={{ mb: 3, color: '#1976d2', fontWeight: 700 }}>Available Elections</Typography>\n          <Grid container spacing={3}>\n            {elections.map(e => (\n              <Grid item xs={12} sm={6} md={4} key={e.id}>\n                <Card elevation={2} sx={{ borderRadius: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" color=\"primary\" gutterBottom>{e.title}</Typography>\n                    <Typography sx={{ fontWeight: 500, color: '#555', mb: 1 }}>Candidates:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                      {e.candidates.map(c => (\n                        <Paper key={c.id} sx={{ p: 1, px: 2, borderRadius: 2, display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>\n                          <Avatar src={c.photo_url} alt={c.name} sx={{ width: 32, height: 32 }} />\n                          <Typography>{c.name}</Typography>\n                          <Button size=\"small\" variant=\"contained\" color=\"success\" onClick={() => handleVote(e.id, c.id)} sx={{ ml: 1 }}>\n                            Vote\n                          </Button>\n                        </Paper>\n                      ))}\n                    </Box>\n                  </CardContent>\n                  <CardActions>\n                    {role === 'admin' && username === 'kantwi' && (\n                      <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={() => handleViewResults(e.id, e.title)}>\n                        View Results\n                      </Button>\n                    )}\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          {voteMsg && <Snackbar open autoHideDuration={3000} onClose={() => setVoteMsg('')}><Alert severity=\"success\">{voteMsg}</Alert></Snackbar>}\n\n          {/* Modern Results Dialog for admin */}\n          <Dialog open={resultsOpen} onClose={() => setResultsOpen(false)} maxWidth=\"sm\" fullWidth>\n            <DialogTitle sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', pr: 1 }}>\n              Results for {resultsElectionTitle}\n              <IconButton onClick={() => setResultsOpen(false)} size=\"large\">\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              {results && (\n                <Box>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart\n                      data={Object.entries(results).map(([name, obj]) => ({ name, votes: obj.votes, photo_url: obj.photo_url }))}\n                      layout=\"vertical\"\n                      margin={{ left: 30, right: 30, top: 20, bottom: 20 }}\n                    >\n                      <XAxis type=\"number\" allowDecimals={false} tick={{ fontWeight: 700 }} />\n                      <YAxis dataKey=\"name\" type=\"category\" width={120} tick={{ fontWeight: 700 }} />\n                      <Tooltip formatter={(value) => [`${value} votes`, 'Votes']} />\n                      <Bar dataKey=\"votes\" fill=\"#1976d2\">\n                        {Object.entries(results).map(([name, obj], idx) => (\n                          <Cell key={name} fill={['#1976d2', '#43a047', '#fbc02d', '#e53935', '#8e24aa'][idx % 5]} />\n                        ))}\n                      </Bar>\n                    </BarChart>\n                  </ResponsiveContainer>\n                  <Box sx={{ mt: 3 }}>\n                    {Object.entries(results).map(([name, obj]) => (\n                      <Stack direction=\"row\" spacing={2} alignItems=\"center\" key={name} sx={{ mb: 1 }}>\n                        <Avatar src={obj.photo_url} alt={name} sx={{ width: 32, height: 32, border: '2px solid #1976d2' }} />\n                        <Typography sx={{ fontWeight: 600, minWidth: 120 }}>{name}</Typography>\n                        <Typography sx={{ color: '#1976d2', fontWeight: 700 }}>{obj.votes} votes</Typography>\n                      </Stack>\n                    ))}\n                  </Box>\n                </Box>\n              )}\n            </DialogContent>\n          </Dialog>\n\n        </Box>\n      )}\n      {view === 'changePassword' && (\n        <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 8 }}>\n          <Card elevation={5} sx={{ borderRadius: 4, p: { xs: 2, sm: 4 }, boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)' }}>\n            <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 700, color: '#1976d2', letterSpacing: 1 }} align=\"center\">\n              Change Password\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <TextField\n                label=\"Current Password\"\n                type=\"password\"\n                value={changePw.current}\n                onChange={e => setChangePw({ ...changePw, current: e.target.value })}\n                fullWidth\n              />\n              <TextField\n                label=\"New Password\"\n                type=\"password\"\n                value={changePw.new}\n                onChange={e => setChangePw({ ...changePw, new: e.target.value })}\n                fullWidth\n              />\n              <TextField\n                label=\"Confirm New Password\"\n                type=\"password\"\n                value={changePw.confirm}\n                onChange={e => setChangePw({ ...changePw, confirm: e.target.value })}\n                fullWidth\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 1, fontWeight: 600, borderRadius: 2, boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)', transition: '0.2s', ':hover': { background: '#115293' } }}\n                onClick={async () => {\n                  setPwMsg('');\n                  if (!changePw.current || !changePw.new) {\n                    setPwMsg('Please fill all fields.');\n                    return;\n                  }\n                  if (changePw.new !== changePw.confirm) {\n                    setPwMsg('New passwords do not match.');\n                    return;\n                  }\n                  try {\n                    await axios.post(`${api}/change_password`, {\n                      username,\n                      current_password: changePw.current,\n                      new_password: changePw.new\n                    });\n                    setPwMsg('Password changed successfully!');\n                    setChangePw({ current: '', new: '', confirm: '' });\n                  } catch (e) {\n                    setPwMsg(\n                      e.response?.data?.message || 'Failed to change password.'\n                    );\n                  }\n                }}\n                fullWidth\n              >\n                Change Password\n              </Button>\n              {pwMsg && <Alert severity={pwMsg.includes('success') ? 'success' : 'error'} sx={{ mt: 2 }}>{pwMsg}</Alert>}\n            </Box>\n          </Card>\n        </Container>\n      )}\n      {view === 'settings' && role === 'admin' && (\n        <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 8 }}>\n          <Card elevation={5} sx={{ borderRadius: 4, p: { xs: 2, sm: 4 }, boxShadow: '0 4px 24px 0 rgba(25, 118, 210, 0.08)' }}>\n            <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 700, color: '#1976d2', letterSpacing: 1 }} align=\"center\">\n              SMTP Settings\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <TextField label=\"SMTP Host\" value={smtp.smtp_host} onChange={e => setSmtp({ ...smtp, smtp_host: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Port\" type=\"number\" value={smtp.smtp_port} onChange={e => setSmtp({ ...smtp, smtp_port: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Username\" value={smtp.smtp_user} onChange={e => setSmtp({ ...smtp, smtp_user: e.target.value })} fullWidth />\n              <TextField label=\"SMTP Password\" type=\"password\" value={smtp.smtp_password} onChange={e => setSmtp({ ...smtp, smtp_password: e.target.value })} fullWidth />\n              <TextField label=\"From Email\" value={smtp.smtp_from} onChange={e => setSmtp({ ...smtp, smtp_from: e.target.value })} fullWidth />\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <input type=\"checkbox\" checked={!!smtp.smtp_tls} id=\"smtp_tls\" onChange={e => setSmtp({ ...smtp, smtp_tls: e.target.checked })} />\n                <label htmlFor=\"smtp_tls\" style={{ fontWeight: 500 }}>Use TLS</label>\n              </Box>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 1, fontWeight: 600, borderRadius: 2, boxShadow: '0 2px 8px 0 rgba(25, 118, 210, 0.08)', transition: '0.2s', ':hover': { background: '#115293' } }}\n                disabled={smtpLoading}\n                onClick={async () => {\n                  setSmtpMsg('');\n                  setSmtpLoading(true);\n                  try {\n                    await axios.post(`${api}/settings`, { ...smtp, username });\n                    setSmtpMsg('Settings updated successfully!');\n                  } catch (e) {\n                    setSmtpMsg(e.response?.data?.message || 'Failed to update SMTP settings.');\n                  }\n                  setSmtpLoading(false);\n                }}\n                fullWidth\n              >\n                Save Settings\n              </Button>\n              {smtpMsg && <Alert severity={smtpMsg.includes('success') ? 'success' : 'error'} sx={{ mt: 2 }}>{smtpMsg}</Alert>}\n            </Box>\n          </Card>\n        </Container>\n      )}\n      {view === 'createElection' && role === 'admin' && (\n        <Box sx={{ maxWidth: 480 }}>\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>Create Election</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField label=\"Election Title\" value={newElection.title} onChange={e => setNewElection({ ...newElection, title: e.target.value })} fullWidth />\n            <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Candidates</Typography>\n            {newElection.candidates.map((c, idx) => (\n              <CandidatePhotoInput\n                key={idx}\n                value={c}\n                onChange={val => {\n                  const arr = [...newElection.candidates];\n                  arr[idx] = val;\n                  setNewElection({ ...newElection, candidates: arr });\n                }}\n              />\n            ))}\n            <Button variant=\"outlined\" onClick={() => setNewElection({ ...newElection, candidates: [...newElection.candidates, { name: '', photo_url: '' }] })}>\n              Add Candidate\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleCreateElection}>\n              Create\n            </Button>\n            <Button onClick={() => setView('dashboard')}>Cancel</Button>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n          </Box>\n        </Box>\n      )}\n    </DashboardLayout>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}